[33mcommit 22679a554842c13f66347ba31969b5abdb4b3e4a[m[33m ([m[1;36mHEAD -> [m[1;32mvcb-26-input-buttons[m[33m)[m
Author: Silvan <niggsil2@students.zhaw.ch>
Date:   Mon Apr 11 18:34:43 2022 +0200

    add buttons memory representation

[33mcommit 9bb522005a43579aa7b73b391fb58f8b52b003a0[m[33m ([m[1;33mtag: 0.232[m[33m, [m[1;31morigin/vcb-26-input-buttons[m[33m)[m
Author: Raphael Krebs <48808406+akrosis@users.noreply.github.com>
Date:   Wed Apr 6 23:45:46 2022 +0200

    Vcb 3 memory contents (#14)
    
    * Initial component setup
    
    * basic memory view frontend layout
    
    * Display memory contents on frontent
    
    * Basic memory display
    
    * implement scrolling and hex-bin switch
    
    * Implement search and suggested changes
    
    * Memory view improvements
    
    * merge local changes to improvements from @clooudch
    
    * format MemoryView/index.ts
    
    * readd check if address offset would be above the max address value
    
    Co-authored-by: Claudio <claudio.frei@ifolor.com>

[33mcommit e083f6c8a02aff12d9d7fce8486594d1d4c64db7[m[33m ([m[1;33mtag: 0.173[m[33m)[m
Author: taggatips <45555748+taggatips@users.noreply.github.com>
Date:   Sun Apr 3 20:03:03 2022 +0200

    Vcb 67 projektskizze (#13)
    
    * First chapter of Projektskizze
    
    * Add chapters 2 and 3
    
    * Add chapter 4
    
    * add chapter 5
    
    * Add draft chapter 6-9
    
    * improvements
    
    * linguistic review
    
    * Correct punctuation
    
    * add bibliography
    
    Co-authored-by: schneph5 - Open Github <philippe-schneider@gmx.net>
    Co-authored-by: Stefan Enz <enzste02@students.zhaw.ch>
    Co-authored-by: deflox <git@deflox.net>

[33mcommit 72eea4fe2232069c72c7e237b7de0a57cbcd8bd5[m[33m ([m[1;33mtag: 0.167[m[33m)[m
Author: ni507 <61540155+ni507@users.noreply.github.com>
Date:   Sat Apr 2 08:06:02 2022 +0200

    Vcb 27 dip switches (#12)
    
    * Add board and raw dip switches
    
    * add memory implementation for switches, tests are still missing though
    
    * add more tests for byte bit operations
    
    * finish writing tests and fix bug discovered while testing
    
    * bit better structure
    
    * make switches read only
    
    * Add switch component functionality
    
    * fix prettier
    
    * refactor and nest dip-switch component in board
    
    * fix endIndex
    
    Co-authored-by: deflox <git@deflox.net>

[33mcommit f801df2aa3049e8bebd8c15b9f5060dc1b785b29[m[33m ([m[1;33mtag: 0.144[m[33m)[m
Author: Raphael Krebs <48808406+akrosis@users.noreply.github.com>
Date:   Thu Mar 31 17:23:17 2022 +0200

    Vcb 94 Jest test execution fix (#11)
    
    Co-authored-by: deflox <git@deflox.net>

[33mcommit c6f5c807479080cd2de9b3ba32630076a0eaca6e[m[33m ([m[1;33mtag: 0.140[m[33m)[m
Author: Leo <deflox@users.noreply.github.com>
Date:   Thu Mar 31 17:09:47 2022 +0200

    Vcb 16 execute code (#8)
    
    * Execution handling wip
    
    * enhance code editor to enable executing code
    
    * add some documentation about the different editor states
    
    * small adjustment
    
    * Load executable
    
    * Undo changes
    
    * Fix test
    
    Co-authored-by: birlekar <birlekar@students.zhaw.ch>
    Co-authored-by: Claudio <claudio.frei@ifolor.com>

[33mcommit 8dcedd7b4482d0a51547627c09a06ee7397d5f62[m[33m ([m[1;33mtag: 0.120[m[33m)[m
Author: stefenz <56473804+stefenz@users.noreply.github.com>
Date:   Thu Mar 31 08:44:49 2022 +0200

    vcb-9-move instruction (#10)
    
    * implemented move instruction
    
    * implemented opcode functions
    
    * implemented getBits function
    
    * implemented mov instruction
    
    * feat: extend Word functionalities
    
    * feat: flags within apsr register
    
    * extend opcode convenience methods
    
    * feat: movs update z and n flags
    
    * fix: flags on view as 1 and 0
    
    * feat: new method for Instruction
    
    in order to handle instructions with same name but different optcode
    
    * feat: test and bugfixes
    
    * added mov instruction tests
    
    * fix: InstructionSet just require interface implementation
    
    * fix: better naming for overflow param
    
    * doc: add javadoc for isBitSet
    
    * feat: hasSign use convenience method
    
    Co-authored-by: wiggemic <wiggemic@students.zhaw.ch>

[33mcommit 3a4768a60e3867e5b6cfac015639a3fd1163fcc0[m[33m ([m[1;33mtag: 0.84[m[33m)[m
Author: m-dot-wigger <56474048+m-dot-wigger@users.noreply.github.com>
Date:   Fri Mar 25 09:39:28 2022 +0100

    vcb-71 crossplatform dev (#9)
    
    * add gitattributes file
    
    * feat: configure prettier to keep existing eol
    
    if it is mixed, then new line of first line is used
    
    * feat: update readme with script to format files

[33mcommit b475318ef0f6b0efc1a424a4015ff896b3028536[m[33m ([m[1;33mtag: 0.68[m[33m)[m
Author: Claudio Frei <claudio.frei@ifolor.com>
Date:   Thu Mar 24 08:32:47 2022 +0100

    VCB-2 RegisterInformation (#5)
    
    * Add low registers
    
    * VCB-59 Show status flags on the view
    
    https://virtualctboard.atlassian.net/browse/VCB-59
    - Implemented first version
    
    * Fixed monospace style
    
    * Fixed view
    
    * Improved view
    
    * Added other registers
    
    * Add event emitter
    
    * FIx formatting issues
    
    * Update regsiter on events
    
    * fix: give dynamic generated html elements key
    
    * feat: flag as state
    
    * feat: flag test
    
    * fix: remove npm package ts-standard for good
    
    * feat: udpate major npm jest-junit
    
    Co-authored-by: Silvan <niggsil2@students.zhaw.ch>
    Co-authored-by: schneph5 - Open Github <philippe-schneider@gmx.net>
    Co-authored-by: wiggemic <wiggemic@students.zhaw.ch>

[33mcommit 0dee93707236ff1d9454faa7416a14b7ec1eb410[m[33m ([m[1;33mtag: 0.57[m[33m)[m
Author: akrosis <48808406+akrosis@users.noreply.github.com>
Date:   Wed Mar 23 22:54:47 2022 +0100

    Vcb 68 build pipeline
    
    * Add jest exporter for ci test execution
    
    * add npm config for ts-standard
    
    * reformat App.tsx
    Required, so the build pipeline can run the build successfully
    
    * add jest reporter
    required for testing in pipeline

[33mcommit c37c38091589d698ffe16925d256914d78637170[m
Author: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
Date:   Wed Mar 23 22:03:10 2022 +0100

    Bump minimist from 1.2.5 to 1.2.6 (#7)
    
    Bumps [minimist](https://github.com/substack/minimist) from 1.2.5 to 1.2.6.
    - [Release notes](https://github.com/substack/minimist/releases)
    - [Commits](https://github.com/substack/minimist/compare/1.2.5...1.2.6)
    
    ---
    updated-dependencies:
    - dependency-name: minimist
      dependency-type: indirect
    ...
    
    Signed-off-by: dependabot[bot] <support@github.com>
    
    Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>

[33mcommit 2c6f364a279433cd083bbafa47be4a406011cf35[m
Author: Leo <deflox@users.noreply.github.com>
Date:   Wed Mar 23 14:10:31 2022 +0000

    Vcb 34 code editor (#4)
    
    * add code editor component
    
    * add custom parser
    
    * add property to component that containst the content of the editor
    
    * apply formatting to all files edited in this branch
    
    * remove console.log statements

[33mcommit 78905f5429541ddc51f3cf2c659b9be5ca870021[m
Author: m-dot-wigger <56474048+m-dot-wigger@users.noreply.github.com>
Date:   Wed Mar 23 12:47:46 2022 +0100

    VCB-21 Architecture (#3)
    
    * VCB-46: representation of memory
    
    * VCB-46: register representation
    
    * Add first version of binary data types
    
    * add first version of assembly parser and representation of code
    
    * Add first version of instruction infrastructure
    
    * temporary syntax error fix
    
    * VCB-44 Create binary data types
    
    Worked on VCB-44 Create binary data types (https://virtualctboard.atlassian.net/browse/VCB-44)
    - Added JavaDoc to halfword and word
    - Improved function add in byte (no underflow anymore)
    - Created structure for tests on byte, halfword and word.
    
    * feat: readme with global packages reminder
    
    * Draft for class-based board architecture
    
    * Draft for assembler
    
    * VCB-44 Create binary data types
    
    https://virtualctboard.atlassian.net/browse/VCB-44
    - Improved function add in byte to have no underflow anymore.
    - Added documentation to all binary files.
    - Created structure for tests of binary files.
    
    * add documentation
    
    * add tests
    
    * Fix formatting in test.
    
    * add processor implementation.
    
    * add parser functionality
    
    * feat: #vcb-53 draft
    
    * feat: auto format by guideline
    
    * fix processor.
    
    * update processor once again and remove isRunning flag and just work setInterval and clearInterval
    
    * add tests for processor class and add ts-mockito library for easier mocking since jest mocking sucks
    
    * add some positive tests for parser and corresponding corrections
    
    * VCB-44 Create binary data types
    
    - Fixed issue in halfword.
    - Created first tests for halfwords.
    
    * feat: throw custom error
    
    * VCB-44 Create binary data types
    
    - Fixed issue in halfword.
    - Created first tests for halfwords.
    
    * VCB-44 Create binary data types
    
    - Worked on tests and fixed issues.
    
    * feat: vcb-53 encoder improvements
    
    * Add tests for instruction set
    
    * Make device memory protected
    
    * VCB-44 Create binary data types
    
    - Fixed issue in function from Byte and from Halfword.
    - Finished tests.
    
    * VCB-44 Create binary data types
    
    - Fixed issue in function from Byte and from Halfword.
    - Finished tests.
    
    * Merge branch 'vcb-21-Architecture' of https://github.com/ZHAW-FS22-PM4/Virtual-CT-Board into vcb-21-Architecture
    
    * VCB-44 Create binary data types
    
    - Fixed issue in function from Byte and from Halfword.
    - Finished tests.
    
    * fix: remove ide specific setting
    
    * update parser and add mov tests
    
    * feat vcb-70: replace ts standard with prettier
    
    * npm security fixes
    
    * fix: reupload tsconfig
    
    * fix tsconfig
    
    * Add prettier
    
    * feat: prettier ignore and readme
    
    * fix: make buildable
    
    * feat: format all files initially
    
    * feat: convenience script to format all files
    
    * feat: just one custom error with type
    
    * first draft for encoder test
    
    * feat: correct mocking encoder test
    
    * Add ICode tests and some more
    
    * feat: encoder test part2
    
    * Remove dummy class
    
    * Remove 'getAreaType' method
    
    * Add comments and sort imports
    
    * Fix test
    
    * Format all files
    
    * Return always fixed length arrays when converting
    
    Co-authored-by: Stefan <stefan-enz@hotmail.ch>
    Co-authored-by: Claudio <claudio.frei@ifolor.com>
    Co-authored-by: taggatips <nathy.j@gmx.net>
    Co-authored-by: schneph5 - Open Github <philippe-schneider@gmx.net>
    Co-authored-by: Stefan Enz <enzste02@students.zhaw.ch>
    Co-authored-by: deflox <git@deflox.net>
    Co-authored-by: Silvan <niggsil2@students.zhaw.ch>

[33mcommit 9e55c7150a07e36f53014cafee1b9a4c64a8cb86[m
Author: ni507 <61540155+ni507@users.noreply.github.com>
Date:   Wed Mar 16 17:39:43 2022 +0100

    VCB-19-BuildSystem (#2)
    
    * Add build system and dependencies from poc.
    
    * Add bootstrap and finish rollup script and package.json file.
    
    * Add jest with dummy test
    
    * Improve jest config
    
    Co-authored-by: deflox <git@deflox.net>

[33mcommit a5a2fded0ef56d5cf5fdd19151962d518ef3318c[m
Author: Leo <deflox@users.noreply.github.com>
Date:   Fri Mar 11 17:43:50 2022 +0000

    Create initial project structure. (#1)

[33mcommit f2fd0ce928497d69dbc5616c3d54370c41434ef8[m
Author: deflox <git@deflox.net>
Date:   Fri Mar 11 17:33:41 2022 +0100

    Initial commit to create master branch.
